---
- name: Install required packages
  yum:
    name:
      - openssh-clients
      - openssh-server
      - rsync
      - glusterfs-geo-replication
    state: latest
  delegate_to: "{{ item }}"
  with_items:
    - "{{ inventory_hostname }}"
    - "{{ glusterfs_cluster_members }}"
    - "{{ glusterfs_slave_members }}"
  tags:
    - glusterfs
    - glusterfs_geo_replication

- name: Create group for geo replication
  group:
    name: geogroup
  delegate_to: "{{ item }}"
  with_items:
    - "{{ glusterfs_slave_members }}"

- name: Create account for geo replication
  user:
    name: geoaccount
    group: geogroup
  delegate_to: "{{ item }}"
  with_items:
    - "{{ glusterfs_slave_members }}"

- name: Make sure sshd is started on the slaves
  systemd:
    name: sshd
    state: started
  delegate_to: "{{ item }}"
  with_items:
    - "{{ glusterfs_slave_members }}"

- name: Check mountbrokers config
  shell: gluster-mountbroker status | grep -e 'UP.*/var/mountbroker-root(OK).*geogroup(OK).*geoaccount.*vol1'
  changed_when: false
  register: mountbrokers_status
  delegate_to: "{{ glusterfs_slave_members[0] }}"

- name: Setup mountbroker root directory
  shell: gluster-mountbroker setup /var/mountbroker-root geogroup
  when: "mountbrokers_status.stdout_lines | length != glusterfs_slave_members | length"
  delegate_to: "{{ glusterfs_slave_members[0] }}"

- name: Add a volume to the mountbroker
  shell: gluster-mountbroker add vol1 geoaccount
  when: "mountbrokers_status.stdout_lines | length != glusterfs_slave_members | length"
  delegate_to: "{{ glusterfs_slave_members[0] }}"

- name: Restart glusterd
  systemd:
    name: glusterd
    state: restarted
  when: "mountbrokers_status.stdout_lines | length != glusterfs_slave_members | length"
  delegate_to: "{{ item }}"
  with_items:
    - "{{ glusterfs_slave_members }}"
  
- name: Generate ssh-key
  shell: ssh-keygen -t rsa -N "" -f $HOME/.ssh/id_rsa
  register: generate_ssh_key
  changed_when: "'already exists' not in generate_ssh_key.stdout"
  failed_when:
    - "generate_ssh_key.rc != 0"
    - "'already exists' not in generate_ssh_key.stdout"

- name: Get pubkey
  shell: cat $HOME/.ssh/id_rsa.pub
  register: pubkey
  changed_when: false

- name: setup de la pubkey
  authorized_key:
    user: geoaccount
    key: "{{ pubkey.stdout_lines[0] }}"
  run_once: true
  delegate_to: "{{ item }}"
  with_items:
    - "{{ glusterfs_slave_members }}"

- name: Generate the key on the masters
  shell : gluster-georep-sshkey generate
  changed_when: false

- name: Push the key and create session
  shell: "gluster volume geo-replication vol1 geoaccount@{{ glusterfs_slave_members[0] }}::vol1 create push-pem"
  register: geo_create_session
  changed_when: 
    - "'alread created' not in geo_create_session.stderr"
    - "'is not empty' not in geo_create_session.stderr"
  failed_when:
    - "geo_create_session.rc != 0"
    - "'already created' not in geo_create_session.stderr"
    - "'is not empty' not in geo_create_session.stderr"

- name: Slave autorizations for slave user
  shell: "/usr/libexec/glusterfs/set_geo_rep_pem_keys.sh geoaccount vol1 vol1"
  changed_when: false
  delegate_to: "{{ item }}"
  with_items:
    - "{{ glusterfs_slave_members[0] }}"

- name: Start the session
  shell: "gluster volume geo-replication vol1 geoaccount@{{ glusterfs_slave_members[0] }}::vol1 start"
  changed_when: "'already started' not in starting_session.stderr"
  register: starting_session
  failed_when:
    - "starting_session.rc != 0"
    - "'already started' not in starting_session.stderr"

- name: Create a directory for mounting glusterfs
  file:
    path: /mnt/glusterfs
    state: directory

- name: Mount the vol1 from master cluster
  mount:
    path: /mnt/glusterfs
    src: gfs1:/vol1
    fstype: glusterfs
    state: mounted  

